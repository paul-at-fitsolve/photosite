<?php
/**
 * Implements hook_block_info().
 */
function customtags_block_info() {
  $blocks = array();
  $voc = taxonomy_vocabulary_machine_name_load('tags');
  $blocks[$voc->vid] = array();
  $blocks[$voc->vid]['info'] = 'Tagcloud';
  $blocks[$voc->vid]['cache'] = DRUPAL_CACHE_GLOBAL;
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function customtags_block_view($delta = '') {
  $block = array();
  if ($voc = taxonomy_vocabulary_load($delta)) {
    $blocks['subject'] = 'Tagcloud';
    $tags = tagadelic_get_weighted_tags(array($delta), variable_get('tagadelic_levels', 6), variable_get('tagadelic_block_tags_' . $delta, 12));
    $tags = tagadelic_sort_tags($tags);
    $blocks['content'] = theme('customtags_weighted', array('terms' => $tags, 'voc' => $voc)); //return a chunk of 12 tags
  }
  return $blocks;
}


/**
 * Theme function that renders the HTML for the tags.
 *
 * @ingroup themable
 */
function theme_customtags_weighted(array $vars) {
  $terms = $vars['terms'];
  $output = '';

  foreach ($terms as $term) {
    $output .= l($term->name, 'tagged-photos/' . $term->tid, array(
      'attributes' => array(
        'class' => array("tagadelic", "level" . $term->weight),
        'rel' => 'tag',
        'title'  => $term->description,
        )
      )
    ) . " \n";
  }
  if (count($terms) >= variable_get('tagadelic_block_tags_' . $vars['voc']->vid, 12)) {
    $output .= theme('more_link', array('title' => t('more tags'), 'url' => "tagadelic/chunk/{$vars['voc']->vid}"));
  }
  return $output;
}


/**
 * Implements hook_theme().
 */
function customtags_theme() {
  return array(
    'customtags_weighted' => array('arguments' => array('terms' => array()))
  );
}